<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="clearBtn.CheckedImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAcJJREFUOE+V
        lEsrRGEYx0e5ZNyGlAYbC3wM5TIWWE5kYSRN+QBqyn2nLLG3YCO2iGJSWJDLVj4BJZcopPH7n3nOMOOM
        Gb/6Nc/zvM975rznvO/x5SKRSFRhk1lp5f/BxGqcwzM8wBUzjqc4iwFr/xsa+/ECh9Bv5RSqYcR6wlb2
        hoYYrmO5lbJCTwVu4LiV0mFgEHWxAgxhpw39grEujVvvJvbbUBIKevBaQhkG8RlfsQc7MGy2Yy9q7Anr
        UHequd8vjGQCIxZHMV9Gbc4IxhQ7kJxgqcVjmC9Rm6MXdaRYiW457iRAPID5knp2xIfoV9CCq1ZXvofi
        HbU9hvHDIxe7Nk3z1rBZQSs6F+S3Fj9RXDudQHzjkQv11lhNF2xRkFoyv934k0VcSoYOmbkI2VwtuUyx
        kmOsRC3Ji3nTC50oHdXkSxEk2jbaLgHU2c3k3sxkH7WHtTPSto2Kl6iNXYQ6/I+YjQecwULUI7vC9C8R
        BffoleAC6nn24RQum4p1UjSmnmL8ffRcGNDH4RxdbnEb9UdyB+/QRUfO++PgQsM0vqk7B+qZtGl/Q2MD
        6s5eMBPVtjBo7f+DiY3YZtZbOQs+3xcwqLQ+pE6R4AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="clearBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>